version: 2
jobs:
  build:
    working_directory: /go/src/github.com/grafana/metrictank
    docker:
      - image: circleci/golang:1.11.4
    steps:
      - checkout
      - run: scripts/build.sh
      - setup_remote_docker
      - run: scripts/build_docker.sh
      - run: mkdir build_docker
      - run: docker save -o build_docker/metrictank.tar grafana/metrictank
      - run: docker save -o build_docker/metrictank-gcr.tar us.gcr.io/metrictank-gcr/metrictank
      - persist_to_workspace:
          root: .
          paths:
            - build
            - build_docker

  test:
    working_directory: /go/src/github.com/grafana/metrictank
    docker:
      - image: circleci/golang:1.11.4
    steps:
      - checkout
      - run:
          command: go test -v -race -timeout 20m $(go list ./... | grep -v github.com/grafana/metrictank/stacktest)
          no_output_timeout: 20m

  qa:
    working_directory: /go/src/github.com/grafana/metrictank
    docker:
      - image: circleci/golang:1.11.4
    steps:
      - checkout
      - run: scripts/qa/gofmt.sh
      - run: scripts/qa/go-generate.sh --force
      - run: scripts/qa/ineffassign.sh
      - run: scripts/qa/misspell.sh
      - run: scripts/qa/gitignore.sh
      - run: scripts/qa/unused.sh
      - run: scripts/qa/vendor.sh
      - run: scripts/qa/vet-high-confidence.sh

  qa-post-build:
    working_directory: /home/circleci/.go_workspace/src/github.com/grafana/metrictank
    machine: true
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: scripts/qa/docs.sh
      - run: docker load -i build_docker/metrictank.tar
      - run: go test -v ./stacktest/tests/end2end_carbon
      - run: go test -v ./stacktest/tests/end2end_carbon_bigtable

  deploy:
    docker:
      - image: circleci/ruby:2.3
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: scripts/depends.sh
      - run: scripts/build_packages.sh
      - store_artifacts:
          path: build
      - store_artifacts:
          path: build_pkg
      - setup_remote_docker
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              scripts/push/packagecloud.sh
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker load -i build_docker/metrictank.tar
              docker load -i build_docker/metrictank-gcr.tar
              scripts/push/dockerhub.sh
              scripts/push/gcr.sh
            fi

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test
      - qa
      - qa-post-build:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
            - qa
            - qa-post-build
