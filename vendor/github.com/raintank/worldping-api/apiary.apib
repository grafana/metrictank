FORMAT: 1A
HOST: http://worldping-api.raintank.io/

# worldPing API

With the worldPing API, you can do everything that's available within the user interface.

### What is worldPing?  
worldPing is an app for [Grafana](//www.grafana.org) that continually tests, stores and alerts on the global performance and uptime of your Internet applications. 

[Install worldPing at Grafana.net](https://grafana.net/plugins/raintank-worldping-app)

### Authentication

To authenticate your API requests, construct a normal HTTPS request and include an Authorization header with the value of Bearer <API_KEY>. 

For example:
```
curl -H "Authorization: Bearer API_KEY" http://worldping-api.raintank.io/api/{method}
```


#### Getting your API Key

API Keys are generated in Grafana.net in the API Keys tab of the [User Profile](https://grafana.net/profile/api-keys). API Keys may also be revoked in the same location.

## MonitorTypes [/api/monitor_types]
A monitor is a type of check, which is used in creating and configuring endpoints. Currently supported checks are DNS, Ping, HTTP and HTTPS.

This method returns a list of supported checks that can be performed and the configuration paramaters for each of those checks. 

### List MonitorTypes [GET]

+ Request

    + Headers

            Authorization: Bearer API_KEY
            
+ Response 200 (application/json)

        [  
            {  
                "id":4,
                "name":"DNS",
                "settings":[  
                    {  
                        "variable":"name",
                        "description":"Record Name",
                        "required":true,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":""
                    },
                    {  
                        "variable":"type",
                        "description":"Record Type",
                        "required":true,
                        "data_type":"Enum",
                        "conditions":{  
                            "values":[  
                                "A",
                                "AAAA",
                                "CNAME",
                                "MX",
                                "NS",
                                "PTR",
                                "SOA",
                                "SRV",
                                "TXT"
                            ]
                        },
                        "default_value":"A"
                    },
                    {  
                        "variable":"server",
                        "description":"Server",
                        "required":false,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":"8.8.8.8"
                    },
                    {  
                        "variable":"port",
                        "description":"Port",
                        "required":false,
                        "data_type":"Number",
                        "conditions":{  
        
                        },
                        "default_value":"53"
                    },
                    {  
                        "variable":"protocol",
                        "description":"Protocol",
                        "required":false,
                        "data_type":"Enum",
                        "conditions":{  
                            "values":[  
                                "tcp",
                                "udp"
                            ]
                        },
                        "default_value":"udp"
                    },
                    {  
                        "variable":"timeout",
                        "description":"Timeout",
                        "required":true,
                        "data_type":"Number",
                        "conditions":{  
        
                        },
                        "default_value":"5"
                    }
                ]
            },
            {  
                "id":1,
                "name":"HTTP",
                "settings":[  
                    {  
                        "variable":"host",
                        "description":"Hostname",
                        "required":true,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":""
                    },
                    {  
                        "variable":"path",
                        "description":"Path",
                        "required":true,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":"/"
                    },
                    {  
                        "variable":"port",
                        "description":"Port",
                        "required":false,
                        "data_type":"Number",
                        "conditions":{  
        
                        },
                        "default_value":"80"
                    },
                    {  
                        "variable":"method",
                        "description":"Method",
                        "required":false,
                        "data_type":"Enum",
                        "conditions":{  
                            "values":[  
                                "GET",
                                "POST",
                                "PUT",
                                "DELETE",
                                "HEAD"
                            ]
                        },
                        "default_value":"GET"
                    },
                    {  
                        "variable":"headers",
                        "description":"Headers",
                        "required":false,
                        "data_type":"Text",
                        "conditions":{  
        
                        },
                        "default_value":"Accept-Encoding: gzip\nUser-Agent: raintank collector\n"
                    },
                    {  
                        "variable":"expectRegex",
                        "description":"Content Match",
                        "required":false,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":""
                    },
                    {  
                        "variable":"timeout",
                        "description":"Timeout",
                        "required":true,
                        "data_type":"Number",
                        "conditions":{  
        
                        },
                        "default_value":"5"
                    }
                ]
            },
            {  
                "id":2,
                "name":"HTTPS",
                "settings":[  
                    {  
                        "variable":"host",
                        "description":"Hostname",
                        "required":true,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":""
                    },
                    {  
                        "variable":"path",
                        "description":"Path",
                        "required":true,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":"/"
                    },
                    {  
                        "variable":"validateCert",
                        "description":"Validate SSL Certificate",
                        "required":false,
                        "data_type":"Boolean",
                        "conditions":{  
        
                        },
                        "default_value":"true"
                    },
                    {  
                        "variable":"port",
                        "description":"Port",
                        "required":false,
                        "data_type":"Number",
                        "conditions":{  
        
                        },
                        "default_value":"443"
                    },
                    {  
                        "variable":"method",
                        "description":"Method",
                        "required":false,
                        "data_type":"Enum",
                        "conditions":{  
                            "values":[  
                                "GET",
                                "POST",
                                "PUT",
                                "DELETE",
                                "HEAD"
                            ]
                        },
                        "default_value":"GET"
                    },
                    {  
                        "variable":"headers",
                        "description":"Headers",
                        "required":false,
                        "data_type":"Text",
                        "conditions":{  
        
                        },
                        "default_value":"Accept-Encoding: gzip\nUser-Agent: raintank collector\n"
                    },
                    {  
                        "variable":"expectRegex",
                        "description":"Content Match",
                        "required":false,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":""
                    },
                    {  
                        "variable":"timeout",
                        "description":"Timeout",
                        "required":true,
                        "data_type":"Number",
                        "conditions":{  
        
                        },
                        "default_value":"5"
                    }
                ]
            },
            {  
                "id":3,
                "name":"Ping",
                "settings":[  
                    {  
                        "variable":"hostname",
                        "description":"Hostname",
                        "required":true,
                        "data_type":"String",
                        "conditions":{  
        
                        },
                        "default_value":""
                    },
                    {  
                        "variable":"timeout",
                        "description":"Timeout",
                        "required":true,
                        "data_type":"Number",
                        "conditions":{  
        
                        },
                        "default_value":"5"
                    }
                ]
            }
        ]

## Monitors [/api/monitors]

A monitor is a check performed on an Endpoint. These methods accepts an Endpoint ID and returns the list of or updates the configured checks on that individual endpoint.  

When you want to update the monitors on a particular endpoint, this method is used, not the *Update Endpoint* method. 

### List Monitors [GET /api/monitors{?endpoint_id}]

+ Request

    + Headers

            Authorization: Bearer API_KEY
            
+ Response 200 (application/json)

        [  
            {  
                "id":19678,
                "org_id":1,
                "endpoint_id":1,
                "endpoint_slug":"www_raintank_io",
                "monitor_type_id":1,
                "monitor_type_name":"HTTP",
                "collector_ids":[  
                    1,
                    2,
                    3,
                    4
                ],
                "collector_tags":[  
        
                ],
                "collectors":[  
                    1,
                    2,
                    3,
                    4
                ],
                "state":0,
                "state_change":"2016-04-20T14:09:58Z",
                "state_check":"2016-04-20T14:14:28Z",
                "settings":[  
                    {  
                        "variable":"host",
                        "value":"www.raintank.io"
                    },
                    {  
                        "variable":"port",
                        "value":"80"
                    },
                    {  
                        "variable":"path",
                        "value":"/"
                    },
                    {  
                        "variable":"timeout",
                        "value":"5"
                    },
                    {  
                        "variable":"method",
                        "value":"GET"
                    },
                    {  
                        "variable":"expectRegex",
                        "value":""
                    },
                    {  
                        "variable":"headers",
                        "value":"Accept-Encoding: gzip\nUser-Agent: raintank collector\n"
                    }
                ],
                "health_settings":{  
                    "num_collectors":3,
                    "steps":3,
                    "notifications":{  
                        "enabled":false,
                        "addresses":""
                    }
                },
                "frequency":60,
                "enabled":true,
                "offset":58,
                "updated":"2016-04-20T14:09:48Z"
            },
            {  
                "id":19684,
                "org_id":1,
                "endpoint_id":1,
                "endpoint_slug":"www_raintank_io",
                "monitor_type_id":3,
                "monitor_type_name":"Ping",
                "collector_ids":[  
                    1,
                    2,
                    3,
                    4
                ],
                "collector_tags":[  
        
                ],
                "collectors":[  
                    1,
                    2,
                    3,
                    4
                ],
                "state":0,
                "state_change":"2016-04-20T14:09:58Z",
                "state_check":"2016-04-20T14:15:18Z",
                "settings":[  
                    {  
                        "variable":"hostname",
                        "value":"www.raintank.io"
                    },
                    {  
                        "variable":"timeout",
                        "value":"5"
                    }
                ],
                "health_settings":{  
                    "num_collectors":3,
                    "steps":3,
                    "notifications":{  
                        "enabled":false,
                        "addresses":""
                    }
                },
                "frequency":10,
                "enabled":true,
                "offset":8,
                "updated":"2016-04-20T14:09:48Z"
            }
        ]

### Update Monitor [POST /api/monitors]
+ Request

    + Headers

            Authorization: Bearer API_KEY
            
+ Request (application/json)

        {  
            "id":19681,
            "endpoint_id":1,
            "monitor_type_id":2,
            "collector_ids":[  
                1,
                2,
                3,
                4
            ],
            "collector_tags":[  
        
            ],
            "settings":[  
                {  
                    "variable":"host",
                    "value":"www.raintank.io"
                },
                {  
                    "variable":"port",
                    "value":"443"
                },
                {  
                    "variable":"path",
                    "value":"/about/"
                },
                {  
                    "variable":"timeout",
                    "value":"5"
                },
                {  
                    "variable":"method",
                    "value":"GET"
                },
                {  
                    "variable":"expectRegex",
                    "value":""
                },
                {  
                    "variable":"validateCert",
                    "value":"true"
                },
                {  
                    "variable":"headers",
                    "value":"Accept-Encoding: gzip\nUser-Agent: raintank collector\n"
                }
            ],
            "enabled":true,
            "frequency":60,
            "health_settings":{  
                "num_collectors":3,
                "steps":3,
                "notifications":{  
                    "enabled":false,
                    "addresses":""
                }
            }
        }

+ Response 200 (application/json)

        {
            "message":"Monitor updated"
        }

## Endpoints [/api/endpoints]

An endpoint is anything you want to monitor, and is the primary way of interacting with worldPing. An endpoint can be a fully formed URL or IP address, and when monitored by private probes, does not even need to be accessible to the internet. 

These methods allow you to list, create, update and delete your endpoints. 

**Updating:** The Update Endpoint method only allows you to change the endpoint name, slug and tags. To update the monitors and configuration for an endpoint, use the *Update Monitor* method listed above. 

**Creating:** The exception to this rule is the *Create Endpoint* method, which accepts the monitor options at the time of creation. 

### List All Endpoints [GET /api/endpoints{?tag}]
+ Request

    + Headers

            Authorization: Bearer API_KEY
            
+ Response 200 (application/json)

        [  
            {  
                "id":1,
                "org_id":1,
                    "name":"www.raintank.io",
                    "slug":"www_raintank_io",
                    "tags":[  
                        "raintank"
                    ]
            },
            {  
                "id":2,
                "org_id":1,
                "name":"www.google.com",
                "slug":"www_google_com",
                "tags":[  
                    "google",
                    "external"
                ]
            }
        ]

### Update Endpoint [POST /api/endpoints]

+ Request

    + Headers

            Authorization: Bearer API_KEY
            
+ Request (application/json)

        { 
            "id":1,
            "org_id":1,
            "name":"www.raintank.io",
            "tags":[
                "raintank",
                "demo"
            ]
        }
        
+ Response 200 (application/json)

        {
            "message":"Endpoint updated"
        }

### Create Endpoint [PUT /api/endpoints]
+ Request

    + Headers

            Authorization: Bearer API_KEY
            
+ Request (application/json)

        {  
            "name":"www.raintank.io",
            "tags":[  
                "raintank"
            ],
            "monitors":[  
                {  
                    "monitor_type_id":1,
                    "settings":[  
                        {  
                            "variable":"host",
                            "value":"www.raintank.io"
                        },
                        {  
                            "variable":"port",
                            "value":"80"
                        },
                        {  
                            "variable":"path",
                            "value":"/"
                        },
                        {  
                            "variable":"timeout",
                            "value":"5"
                        },
                        {  
                            "variable":"method",
                            "value":"GET"
                        },
                        {  
                            "variable":"expectRegex",
                            "value":""
                        }
                    ],
                    "endpoint_id":-1,
                    "collector_ids":[  
                        1,
                        2,
                        3,
                        4
                    ],
                    "collector_tags":[  
        
                    ],
                    "enabled":true,
                    "frequency":60,
                    "health_settings":{  
                        "steps":3,
                        "num_collectors":3,
                        "notifications":{  
                            "enabled":false,
                            "addresses":""
                        }
                    }
                },
                {  
                    "monitor_type_id":3,
                    "settings":[  
                        {  
                            "variable":"hostname",
                            "value":"www.raintank.io"
                        },
                        {  
                            "variable":"timeout",
                            "value":"5"
                        }
                    ],
                    "endpoint_id":-1,
                    "collector_ids":[  
                        1,
                        2,
                        3,
                        4
                    ],
                    "collector_tags":[  
        
                    ],
                    "enabled":true,
                    "frequency":10,
                    "health_settings":{  
                        "steps":3,
                        "num_collectors":3,
                        "notifications":{  
                            "enabled":false,
                            "addresses":""
                        }
                    }
                }
            ]
        }

+ Response 200 (application/json)

        {  
            "id":1,
            "org_id":1,
            "name":"www.raintank.io",
            "slug":"www_raintank_io",
            "tags":[  
                "raintank"
            ]
        }


## Probes [/api/collectors]

Probes provide the execution of periodic network performance tests including HTTP checks, DNS and Ping. The results of each test are then transfered back to the worldPing API where they are processed and inserted into a timeseries database.

This method allows the listing of existing probes, both official worldPing probes as well as any private probes that have been created.

### List all Probes [GET]

+ Request

    + Headers

            Authorization: Bearer API_KEY
            
+ Response 200 (application/json)
    
        [  
            {  
                "id":1,
                "org_id":1,
                "slug":"san-francisco",
                "name":"San Francisco",
                "tags":[  
                    "USA"
                ],
                "public":true,
                "latitude":0,
                "longitude":0,
                "online":true,
                "online_change":"2016-04-20T13:09:42Z",
                "enabled":true,
                "enabled_change":"2015-07-10T21:39:02Z"
            },
            {  
                "id":2,
                "org_id":1,
                "slug":"amsterdam",
                "name":"Amsterdam",
                "tags":[  
        
                ],
                "public":true,
                "latitude":0,
                "longitude":0,
                "online":true,
                "online_change":"2016-04-20T07:03:42Z",
                "enabled":true,
                "enabled_change":"2015-07-10T21:39:02Z"
            },
            {  
                "id":3,
                "org_id":1,
                "slug":"london",
                "name":"London",
                "tags":[  
                    "EMEA"
                ],
                "public":true,
                "latitude":0,
                "longitude":0,
                "online":true,
                "online_change":"2016-04-20T12:02:26Z",
                "enabled":true,
                "enabled_change":"2015-07-10T21:39:02Z"
            }
        ]