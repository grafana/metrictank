version: '2'

services:
  metrictank:
    hostname: metrictank
    image: grafana/metrictank
    ports:
     - "2003:2003"
    expose:
     - 6060
    volumes:
      - ./metrictank.ini:/etc/metrictank/metrictank.ini
      - ./storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ./storage-aggregation.conf:/etc/metrictank/storage-aggregation.conf
    environment:
     WAIT_HOSTS: cassandra:9042,kafka:9092
     WAIT_TIMEOUT: 60
    links:
     - cassandra

  kafka:
    hostname: kafka
    image: raintank/kafka
    environment:
      ADVERTISED_HOST: kafka
      NUM_PARTITIONS: 8
    ports:
      - "2181:2181"
      - "9092:9092"
      - "9999:9999"
    volumes:
      - /tmp/kafka-logs

  cassandra:
    hostname: cassandra
    image: cassandra:3.9
    environment:
      MAX_HEAP_SIZE: 1G
      HEAP_NEWSIZE: 256M
    ports:
     - "9042:9042"

  graphite:
    hostname: graphite
    image: raintank/graphite-mt
    expose:
     - 80
    environment:
      GRAPHITE_CLUSTER_SERVERS: metrictank:6060
      GRAPHITE_STATSD_HOST: statsdaemon
      SINGLE_TENANT: "1"
      WSGI_PROCESSES: 4
      WSGI_THREADS: 25

  grafana:
    hostname: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"

  statsdaemon:
    hostname: statsdaemon
    image: raintank/statsdaemon
    ports:
     - "8125:8125/udp"
    volumes:
     - "../statsdaemon.ini:/etc/statsdaemon.ini"

  prometheus:
    image: prom/prometheus:v2.2.1
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
     - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.15.2
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.28.3
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "6060:6061"
      - "6061:6061"
      - "6062:6062"
      - "8080:8081"
      - "8081:8081"
      - "8082:8082"
    volumes:
      - ./caddy/:/etc/caddy/
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  tsdb-gw:
    hostname: tsdb-gw
    image: raintank/tsdb-gw:0.8.0-111-g5fa198b
    ports:
     - "9000:80"
    volumes:
      - ../../scripts/config/storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ./gw:/etc/gw/
    environment:
     WAIT_HOSTS: kafka:9092
     WAIT_TIMEOUT: 60
    links:
     - metrictank
     - graphite
     - kafka
