version: '2'

services:
  metrictank:
    hostname: metrictank
    image: grafana/metrictank
    ports:
     - "6060:6060"
     - "2003:2003"
    volumes:
      - ../../build/metrictank:/usr/bin/metrictank
      - ../../scripts/config/metrictank-docker-dev.ini:/etc/metrictank/metrictank.ini
      - ../../scripts/config/index-rules.conf:/etc/metrictank/index-rules.conf
      - ../../scripts/config/storage-aggregation.conf:/etc/metrictank/storage-aggregation.conf
      - ../../scripts/config/storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ../../scripts/config/schema-store-cassandra.toml:/etc/metrictank/schema-store-cassandra.toml
      - ../../scripts/config/schema-idx-cassandra.toml:/etc/metrictank/schema-idx-cassandra.toml

    environment:
      WAIT_HOSTS: cassandra:9042
      WAIT_TIMEOUT: 60
      MT_HTTP_MULTI_TENANT: "false"
      MT_MEMORY_IDX_TAG_SUPPORT: "true"
    links:
     - cassandra
     - jaeger

  cassandra:
    hostname: cassandra
    image: cassandra:3.9
    environment:
      MAX_HEAP_SIZE: 1G
      HEAP_NEWSIZE: 256M
    ports:
     - "9042:9042"

  graphite:
    hostname: graphite
    image: raintank/graphite-mt
    ports:
     - "8080:80"
    environment:
      GRAPHITE_CLUSTER_SERVERS: metrictank:6060
      GRAPHITE_STATSD_HOST: statsdaemon
      WSGI_PROCESSES: 4
      WSGI_THREADS: 25

  grafana:
    hostname: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasources:/etc/grafana/provisioning/datasources
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ../cfg/grafana-dashboards-main-extra-dockprom:/etc/grafana/provisioning/dashboards
      - ../../dashboards:/var/lib/grafana/dashboards
    links:
     - jaeger

  statsdaemon:
    hostname: statsdaemon
    image: raintank/statsdaemon
    ports:
     - "8125:8125/udp"
    volumes:
     - "../cfg/statsdaemon.ini:/etc/statsdaemon.ini"

  jaeger:
    hostname: jaeger
    image:  jaegertracing/all-in-one
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  prometheus:
    image: prom/prometheus:v2.2.1
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
     - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.15.2
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.28.3
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    labels:
      org.label-schema.group: "monitoring"
